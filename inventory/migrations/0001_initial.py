# Generated by Django 5.1.4 on 2025-03-01 13:32

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InventoryTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(help_text='Positive for additions, negative for removals')),
                ('previous_stock', models.PositiveIntegerField()),
                ('new_stock', models.PositiveIntegerField()),
                ('transaction_type', models.CharField(choices=[('add', 'Stock Added'), ('remove', 'Stock Removed'), ('adjust', 'Stock Adjusted'), ('initial', 'Initial Stock')], max_length=10)),
                ('notes', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_transactions', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_transactions', to='core.product')),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['product', 'timestamp'], name='inventory_i_product_6b6351_idx'), models.Index(fields=['transaction_type'], name='inventory_i_transac_2eccee_idx'), models.Index(fields=['performed_by'], name='inventory_i_perform_4e347a_idx')],
            },
        ),
        migrations.CreateModel(
            name='LowStockAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_level', models.PositiveIntegerField()),
                ('threshold', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('acknowledged', 'Acknowledged'), ('resolved', 'Resolved')], default='pending', max_length=15)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acknowledged_alerts', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='low_stock_alerts', to='core.product')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['product', 'status'], name='inventory_l_product_7d47c7_idx'), models.Index(fields=['status'], name='inventory_l_status_63f299_idx'), models.Index(fields=['created_at'], name='inventory_l_created_684410_idx')],
            },
        ),
        migrations.CreateModel(
            name='PriceChangeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_price', models.PositiveBigIntegerField()),
                ('new_price', models.PositiveBigIntegerField()),
                ('changed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True, null=True)),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='price_changes', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_changes', to='core.product')),
            ],
            options={
                'ordering': ['-changed_at'],
                'indexes': [models.Index(fields=['product', 'changed_at'], name='inventory_p_product_fb071e_idx'), models.Index(fields=['changed_by'], name='inventory_p_changed_be90f7_idx')],
            },
        ),
    ]
