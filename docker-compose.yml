version: '3.9'

services:
  db:
    image: docker.arvancloud.ir/postgres:15
    container_name: postgres_container
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: laklak_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1162m
    ports:
      - "5432:5432"

  web:
    build: .
    container_name: django_container
    restart: always
    depends_on:
      - db
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      DATABASE_NAME: laklak_db
      DATABASE_USER: postgres
      DATABASE_PASSWORD: 1162m
      DATABASE_HOST: db
      DATABASE_PORT: 5432
    command: ["sh", "-c", "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"]

  zookeeper:
    image: docker.arvancloud.ir/confluentinc/cp-zookeeper:latest
    container_name: zookeeper_container
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log

  kafka:
    image: docker.arvancloud.ir/confluentinc/cp-kafka:latest
    container_name: kafka_container
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data

  kafka-ui:
    image: docker.arvancloud.ir/provectuslabs/kafka-ui:latest
    container_name: kafka_ui_container
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  metabase:
    image: docker.arvancloud.ir/metabase/metabase:latest
    container_name: metabase_container
    restart: always
    ports:
      - "3000:3000"
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: laklak_db
      MB_DB_PORT: 5432
      MB_DB_USER: postgres
      MB_DB_PASS: 1162m
      MB_DB_HOST: db
    depends_on:
      - db


volumes:
  postgres_data:
  zookeeper_data:
  zookeeper_log:
  kafka_data: